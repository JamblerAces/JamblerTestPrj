<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">


    <bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start"
          destroy-method="stop" depends-on="h2WebServer">
        <constructor-arg value="-tcp,-tcpPort,9092"/>
    </bean>

    <bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" init-method="start"
          destroy-method="stop">
        <constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>
    </bean>

    <!--   <jdbc:initialize-database data-source="dataSource">
           <jdbc:script location="classpath:/sql/db_schema_h2.ddl"/>
       </jdbc:initialize-database> -->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="org.h2.Driver"/>
        <property name="jdbcUrl" value="jdbc:h2:mem:testDb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"/>
    </bean>

    <!-- Hibernate 4 Annotation SessionFactory Bean definition-->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses" value="domain.Customer"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!--    <beans profile="h2server"> -->
    <!---Dspring.profiles.active="h2server" to activate-->
    <!--provides a H2 console to look into the db if necessary-->
    <bean id="org.h2.tools.Server-WebServer" class="org.h2.tools.Server"
          factory-method="createWebServer"
          init-method="start" lazy-init="false">
        <constructor-arg value="-web,-webPort,11111,-baseDir,jdbc:h2:mem:test"/>
    </bean>
    <!-- </beans> -->

    <!--    Configuring TransactionManager Bean -->
    <tx:annotation-driven/>
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>



    <!--  H2 embedded database for invoke working with MySQL  -->
    <!--   <bean id="h2.dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
           <property shopName="driverClass" value="org.h2.Driver"/>
           <property shopName="url" value="jdbc:h2:mem:test;MODE=Oracle;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"/>
           <property shopName="username" value="sa"/>
           <property shopName="password" value=""/>
       </bean>

    <jdbc:initialize-database data-source="h2.dataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:/sql/db_schema_h2.ddl"/>
        <jdbc:script location="classpath:/sql/db-test-data.sql"/>
    </jdbc:initialize-database>

    -->

</beans>